#!/usr/bin/perl

use strict;
use warnings;

package MockUpLastFM;
use HTTP::Server::Simple::CGI;
use base qw{ HTTP::Server::Simple::CGI };

my %dispatch = (
    '/' => \&response_handshake,
    '/np' => \&response_nowplaying,
    '/submit' => \&response_submit
);

sub print_banner {
}

sub reply {
    my ($code, $body) = @_;
    my $bodytext = join("\n", @{ $body }) . "\n";
    my $bodylength = length $bodytext;

    if ($code == 200) {
        print "HTTP/1.1 200 OK\r\n";
    } elsif ($code == 404) {
        print "HTTP/1.1 404 Not found\r\n";
    } else {
        die "Unknown code: $code\n";
    }
    print "Content-Length: $bodylength\r\n";
    print "Content-Type: text/plain\r\n";
    print "\r\n";
    print $bodytext;
}

sub handle_request {
    my ($self, $cgi) = @_;

    my $path = $cgi->path_info();
    my $handler = $dispatch{$path};
    print STDERR "$path\n";

    if (ref $handler eq "CODE") {
        $handler->($cgi);

    } else {
        reply 404, [ "Not found" ];
    }
}

sub response_handshake {
    my ($cgi) = @_;
    reply 200, [ "OK",
                 "cafebabe",
                 "http://localhost:8080/np",
                 "http://localhost:8080/submit" ];
}

sub response_submit {
    my ($cgi) = @_;
    reply 200, [ "OK" ];
    foreach my $key ($cgi->param()) {
        print STDERR "$key: {", $cgi->param($key), "}\n";
    }
}

sub response_nowplaying { response_submit(@_); }

package main;
my $srv = MockUpLastFM->new(8080);
my $pid = $srv->run();
